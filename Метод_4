#include <iostream>
#include <cmath>

using namespace std;

double ef(double x) {
    return pow(x, 3) - 0.2 * x * x + 0.5 * x - 1.0;
}

// метод деления отрезка пополам
double dim(double (*f)(double), double a, double b, double epsilon) {
    // проверка, что на концах отрезка функция имеет разные знаки
    if (f(a) * f(b) > 0) {
        cout << "На концах одинаковые знаки!" << endl;
        return NAN; 
    }

    int iter = 0;
    double c;      

    while ((b - a) / 2 > epsilon) {
        c = (a + b) / 2;
        iter++;

        if (f(c) == 0) {
            return c;
        } else if (f(a) * f(c) < 0) {
            b = c; 
        } else {
            a = c; 
        }
    }

    cout << "Количество итераций: " << iter << endl;
    return (a + b) / 2; // приближ значение корня
}

int main() {
    double a = 0;      
    double b = 3;       
    double epsilon = 1e-10; 
    double root = dim(ef, a, b, epsilon);

    if (!isnan(root)) {
        cout << "Решение уравнения: x = " << root << endl;
        double fun = ef(root);
        cout << "Значение функции: f(" << root << ") = " << fun << endl;
    } else {
        cout << "Корень не найден." << endl;
    }

    return 0;
}
